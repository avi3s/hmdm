<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~
  ~ Headwind MDM: Open Source Android MDM Software
  ~ https://h-mdm.com
  ~
  ~ Copyright (C) 2019 Headwind Solutions LLC (http://h-sms.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd"
        logicalFilePath="knox.changelog.xml">

    <!--
    The change set IDs MUST start with "plugin-<plugin identifier>" followed by dash symbol ALWAYS.
    The database object names declared by plugin MUST always start with "plugin_<plugin identifier>" followed by underscore
    symbol.
    -->

    <changeSet id="plugin-knox-22.03.2021-19:44" author="seva" context="common">
        <comment>Plugin,new: knox</comment>
        <sql>
            INSERT INTO plugins (
            identifier, name, description,
            javascriptModuleFile,
            functionsViewTemplate,
            settingsViewTemplate,
            namelocalizationkey,
            settingsPermission, functionsPermission, deviceFunctionsPermission,
            enabledForDevice
            )
            VALUES (
            'knox', 'Knox', 'Configures features available on Knox-based Samsung devices',
            'app/components/plugins/knox/knox.module.js',
            'app/components/plugins/knox/views/knox.html',
            NULL,
            'plugin.knox.localization.key.name',
            'plugin_knox_access',
            'plugin_knox_access',
            'plugin_knox_access',
            TRUE
            );
            INSERT INTO pluginsdisabled VALUES((SELECT id FROM plugins WHERE identifier='knox'), 1);

            INSERT INTO permissions (name, description) VALUES ('plugin_knox_access', 'Can setup Knox features');
            INSERT INTO userRolePermissions (roleId, permissionId) VALUES (1, currval('permissions_id_seq'));
            INSERT INTO userRolePermissions (roleId, permissionId) VALUES (2, currval('permissions_id_seq'));

            CREATE TABLE plugin_knox_rules (
            id serial NOT NULL CONSTRAINT plugin_knox_settings_pr_key PRIMARY KEY,
            configurationId INT NOT NULL REFERENCES configurations (id) ON DELETE CASCADE,
            rule TEXT,
            tableType TEXT NOT NULL DEFAULT 'OUTGOING_CALL',
            ruleType TEXT NOT NULL DEFAULT 'BLACKLIST'
            );

            CREATE INDEX plugin_knox_rules_tableType_idx ON plugin_knox_rules(tableType);
            CREATE INDEX plugin_knox_rules_ruleType_idx ON plugin_knox_rules(ruleType);

        </sql>
        <rollback>
            DROP INDEX plugin_knox_rules_tableType_idx;
            DROP INDEX plugin_knox_rules_ruleType_idx;
            DROP TABLE plugin_knox_rules;
            DELETE FROM permissions WHERE name = 'plugin_knox_access';
            DELETE FROM pluginsdisabled WHERE pluginid=(SELECT id FROM plugins WHERE identifier='knox');
            DELETE FROM plugins WHERE identifier = 'knox';
        </rollback>
    </changeSet>

</databaseChangeLog>